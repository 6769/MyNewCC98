apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "org.cc98.mycc98"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode getSelfDefinedVersion("code")
        versionName getSelfDefinedVersion("name")
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        resConfigs "zh"
    }
    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false

            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "myCC98+.${variant.name}-${variant.versionName}.apk"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

configurations {
    all {
        exclude module: 'httpclient'
        exclude module: 'commons-logging'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':library:apicc98')
    implementation project(':library:SwiftEmotion:swiftemotionboard')
    compile 'com.just.agentweb:agentweb:3.0.0'
    compile 'com.diegodobelo.expandingview:expanding-view:0.9.4'
    compile 'com.huxq17.xrefreshview:xrefreshview:3.6.9'
    implementation 'com.android.support:appcompat-v7:27.0.0'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.yydcdut:rxmarkdown:0.1.1-beta'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.3.4'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.3.0'
    implementation 'com.orhanobut:logger:2.1.1'
    compile 'com.github.medyo:android-about-page:1.2.2'
    compile 'com.mikepenz:aboutlibraries:5.9.6@aar'
    compile 'de.hdodenhof:circleimageview:2.1.0'
    compile 'com.jude:swipebackhelper:3.1.2'
    implementation 'com.jakewharton:butterknife:8.8.1'
    implementation 'com.android.support:support-v4:26.1.0'
    implementation 'com.android.support:recyclerview-v7:26.1.0'
    implementation 'com.android.support:cardview-v7:26.1.0'
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'com.github.bumptech.glide:glide:4.5.0'
    implementation 'com.baidu.mobstat:mtj-sdk:3.8.1.1'
    compile 'com.allenliu.versionchecklib:library:1.8.8'
    implementation 'com.github.chrisbanes:PhotoView:2.1.3'
    implementation 'com.droidninja:filepicker:2.1.2'
    implementation 'top.zibin:Luban:1.1.3'
    implementation 'com.jph.takephoto:takephoto_library:4.0.3'

    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
}


def getSelfDefinedVersion(type) {
    int aa = 0
    int bb = 1

    Process process = "git rev-list --count HEAD".execute()
    process.waitFor()
    int cccc = process.getText().toInteger()

    if ("code".equals(type)) {
        aa * 10000 + bb * 100 + cccc
        //main version code
    } else if ("name".equals(type)) {
        String today = new Date().format("yyMMdd")
        process = "git describe --always".execute()
        process.waitFor()
        String sha1 = process.getText().trim()
        "$aa.$bb.$cccc.$today.$sha1"
    }
}

def getGitBranch() {
    Process process = "git symbolic-ref --short HEAD".execute()
    process.waitFor()
    String brachname = process.getText().trim()
    brachname
}
